#!/usr/bin/env python
PACKAGE = "long_pid"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("latency",          int_t,      0,  "Initial latency after recomputing the velocity profile",           5,      0,      100)
gen.add("Ax_acc_max",       double_t,   0,  "Maximum longitudinal acceleration (when accelerating)",            8.0,    0.0,    20.0)
gen.add("Ax_dec_max",       double_t,   0,  "Maximum longitudinal acceleration (when braking)",                 10.0,   0.0,    20.0)
gen.add("Ay_max",           double_t,   0,  "Maximum lateral acceleration",                                     10.0,   0.0,    20.0)
gen.add("Vx_max",           double_t,   0,  "Maximum longitudinal velocity",                                    20.0,   0.0,    30.0)
gen.add("Vx_final",         double_t,   0,  "Final velocity, only used when lastApex is set to False",          8.0,    0.0,    20.0)
gen.add("Vx_min",           double_t,   0,  "Minimum longitudinal velocity, used only in spatial vel. prof.",   2.0,    0.0,    20.0)
gen.add("lluisrho",         double_t,   0,  "Increasing or decreasing ellipse (1 <= rho < inf)",                1.0,    1.0,    20.0)
gen.add("troProfileMU",     double_t,   0,  "Increasing or decreasing offline vel profile (0 < mu <= 1)",       1.0,    0.0,    1.0)
gen.add("Kp",               double_t,   0,  "Constant of proportional for the PI",                              1.0,    0.0,    10000.0)
gen.add("Ki",               double_t,   0,  "Constant of integral for the PI",                                  1.0,    0.0,    10000.0)
gen.add("Kd",               double_t,   0,  "Constant of derivative for the PI",                                1.0,    0.0,    10000.0)
gen.add("minDist",          double_t,   0,  "Minimum distance for recomputing vel. profile",                    15.0,   0.0,    50.0)
gen.add("lastApex",         bool_t,     0,  "Accelerating prof. from last apex to the end",                     False)
gen.add("spatialFlag",      bool_t,     0,  "Whether we use the space domain velocity profile or not",          False)
gen.add("TrqLimited",       bool_t,     0,  "Whether the controller will run torque limited or not",            False)

exit(gen.generate(PACKAGE, PACKAGE, "long"))